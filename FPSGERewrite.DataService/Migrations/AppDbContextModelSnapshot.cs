// <auto-generated />
using System;
using FPSGERewrite.DataService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPSGERewrite.DataService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("FPSGERewrite.Entities.DbSet.Keyboard", b =>
                {
                    b.Property<Guid>("KeyboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CableLength")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RGB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SwitchType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("KeyboardId");

                    b.ToTable("Keyboard");
                });

            modelBuilder.Entity("FPSGERewrite.Entities.DbSet.Mouse", b =>
                {
                    b.Property<Guid>("MouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdditionalKeys")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("RGB")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SensorType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MouseId");

                    b.ToTable("Mouse");
                });

            modelBuilder.Entity("FPSGERewrite.Entities.DbSet.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("KeyboardId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MouseId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductCondition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.HasIndex("KeyboardId")
                        .IsUnique();

                    b.HasIndex("MouseId")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FPSGERewrite.Entities.DbSet.Product", b =>
                {
                    b.HasOne("FPSGERewrite.Entities.DbSet.Keyboard", "Keyboard")
                        .WithOne("Product")
                        .HasForeignKey("FPSGERewrite.Entities.DbSet.Product", "KeyboardId");

                    b.HasOne("FPSGERewrite.Entities.DbSet.Mouse", "Mouse")
                        .WithOne("Product")
                        .HasForeignKey("FPSGERewrite.Entities.DbSet.Product", "MouseId");

                    b.Navigation("Keyboard");

                    b.Navigation("Mouse");
                });

            modelBuilder.Entity("FPSGERewrite.Entities.DbSet.Keyboard", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("FPSGERewrite.Entities.DbSet.Mouse", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
